<label title=@Description class="@color rounded-lg  items-center text-white py-2 px-4 flex justify-between">
    <span class="w-3/4">@Text</span>
    <div class="checkbox-wrapper-5 w-1/4 flex justify-end items-center">
        <div class="check">
            <input name="myCheckbox" id=@Id type="checkbox" @bind="Checked" @bind:event="oninput" disabled=@Disabled>
            <label for="@Id"></label>
        </div>
    </div>
</label>


@code {
    /// <summary>
    /// The color of the checkbox.
    /// </summary>
    private string color = "bg-pallette-secondary-black";

    /// <summary>
    /// The description of the checkbox.
    /// </summary>
    [Parameter]
    public string Description { get; set; } = "Description";

    /// <summary>
    /// The text of the checkbox.
    /// </summary>
    [Parameter]
    public string Text { get; set; } = "Text";

    /// <summary>
    /// The ID of the checkbox.
    /// </summary>
    [Parameter]
    public string Id { get; set; } = "checkbox";

    /// <summary>
    /// The checked state of the checkbox.
    /// </summary>
    private bool _checked = true;

    /// <summary>
    /// Gets or sets the checked state of the checkbox.
    /// </summary>
    [Parameter]
    public bool Checked
    {
        get => _checked;
        set
        {
            if (value != _checked)
            {
                _checked = value;
                CheckedChanged.InvokeAsync(value);
            }
        }
    }

    /// <summary>
    /// The event that is triggered when the checked state of the checkbox changes.
    /// </summary>
    [Parameter]
    public EventCallback<bool> CheckedChanged { get; set; }

    /// <summary>
    /// The disabled state of the checkbox.
    /// </summary>
    [Parameter]
    public bool Disabled { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        UpdateColor();
    }

    private void UpdateColor()
    {
        color = Disabled ? "bg-pallette-disabled-black" : "bg-pallette-secondary-black";
    }
}
